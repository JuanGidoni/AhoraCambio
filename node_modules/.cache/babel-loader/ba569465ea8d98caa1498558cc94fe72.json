{"ast":null,"code":"import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport axios from 'axios';\nexport default class InfoLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cargarData = () => {\n      let tokenStr = localStorage.getItem(\"logueado\");\n      let webApiUrl = 'https://id.twitch.tv/oauth2/userinfo'; //console.log(webApiUrl);\n\n      axios.get(webApiUrl, {\n        headers: {\n          \"Authorization\": `Bearer ${tokenStr}`\n        }\n      }).then(response => {\n        var data = response.data;\n        this.setState({\n          user: data.preferred_username\n        });\n        this.setState({\n          aud: data.aud\n        });\n        this.userData();\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.userData = () => {\n      let webApiUrl = 'https://api.twitch.tv/helix/users';\n      var params = {\n        'login': this.state.user\n      };\n      var headers = {\n        'Client-id': this.state.aud\n      };\n      console.log(webApiUrl);\n      axios.get(webApiUrl, {\n        params,\n        headers\n      }).then(response => {\n        var dataUser = response.data.data[0];\n\n        if (dataUser.broadcaster_type == 'affiliate') {\n          this.setState({\n            data: {\n              user_badge: 'Afiliado',\n              img: dataUser.profile_image_url,\n              user_view: dataUser.view_count,\n              user_name: dataUser.display_name\n            }\n          });\n        } else if (dataUser.broadcaster_type == 'partner') {\n          this.setState({\n            data: {\n              user_badge: 'Partner',\n              img: dataUser.profile_image_url,\n              user_view: dataUser.view_count,\n              user_name: dataUser.display_name\n            }\n          });\n        } else {\n          this.setState({\n            data: {\n              user_badge: 'Normal',\n              img: dataUser.profile_image_url,\n              user_view: dataUser.view_count,\n              user_name: dataUser.display_name\n            }\n          });\n        }\n\n        setTimeout(() => {\n          this.setState({\n            load: false\n          });\n        }, 1000);\n        console.log(dataUser);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.userDataStreamers();\n    };\n\n    this.userDataStreamers = () => {\n      let webApiUrl = 'https://api.twitch.tv/kraken/users?login=coscu,grafo,nanocs1,elcanaldejoaco,pimpeano,qevito,rant4r,tortita,niro';\n      var headers = {\n        'Client-id': this.state.aud,\n        'Accept': 'application/vnd.twitchtv.v5+json'\n      };\n      console.log(webApiUrl);\n      axios.get(webApiUrl, {\n        headers\n      }).then(response => {\n        var dataUser = response.data.users;\n        this.setState({\n          dataStreamersInfo: dataUser,\n          load: \"false\"\n        });\n        this.setState({\n          load: \"true\"\n        }); // console.log(this.state.streamers)\n\n        console.log(dataUser);\n      }).catch(error => {\n        console.log(error);\n      }); //console.log(\"Antes de ejecutar!\")\n      // console.log(this.state)\n      //this.traer()\n    };\n\n    this.state = {\n      data: {},\n      exp: {\n        'level': 99\n      },\n      dataStreamersInfo: [],\n      isOpen: false,\n      load: true\n    };\n    this.cargarData();\n    const checkData = this.state.data;\n    const local = localStorage.getItem('logueado'); //console.log(this.props.location.hash)\n\n    const values = queryString.parse(window.location.hash); // console.log(values.access_token)\n\n    const login = values.access_token; // console.log(\"Variable local ahora es \" + local )\n    //const local = localStorage.getItem('logueado')\n\n    function removeHash() {\n      window.history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n    }\n\n    if (login == null && local == null) {\n      setTimeout(() => {\n        this.setState({\n          load: false\n        });\n      }, 500); // console.log(\"El usuario no est√° logueado\")\n    } else if (login != null) {\n      localStorage.setItem('logueado', login);\n      this.local = localStorage.getItem('logueado');\n      this.cargarData(); //console.log(\"Usuario logueado con \" + this.local )\n\n      if (this.local == localStorage.getItem('logueado')) {\n        this.setState({\n          load: false\n        });\n        removeHash();\n      } else {\n        window.location.reload();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jukxz/Desktop/ClipsArmy/clipsarmy/src/components/InfoLogin.jsx"],"names":["React","Component","queryString","axios","InfoLogin","constructor","props","cargarData","tokenStr","localStorage","getItem","webApiUrl","get","headers","then","response","data","setState","user","preferred_username","aud","userData","catch","error","console","log","params","state","dataUser","broadcaster_type","user_badge","img","profile_image_url","user_view","view_count","user_name","display_name","setTimeout","load","userDataStreamers","users","dataStreamersInfo","exp","isOpen","checkData","local","values","parse","window","location","hash","login","access_token","removeHash","history","pushState","document","title","pathname","search","setItem","reload"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;AAEhDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoDjBC,UApDiB,GAoDJ,MAAM;AAEhB,UAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AACC,UAAIC,SAAS,GAAG,sCAAhB,CAHe,CAIhB;;AACCR,MAAAA,KAAK,CAACS,GAAN,CAAUD,SAAV,EAAqB;AAAEE,QAAAA,OAAO,EAAE;AAAC,2BAAmB,UAASL,QAAS;AAAtC;AAAX,OAArB,EACCM,IADD,CACMC,QAAQ,IAAG;AACf,YAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AAEA,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAEF,IAAI,CAACG;AAAZ,SAAd;AAEA,aAAKF,QAAL,CAAc;AAACG,UAAAA,GAAG,EAAEJ,IAAI,CAACI;AAAX,SAAd;AAED,aAAKC,QAAL;AAEF,OAVC,EAWDC,KAXC,CAWKC,KAAK,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAbC;AAcH,KAvEgB;;AAAA,SAyEhBF,QAzEgB,GAyEL,MAAM;AAEf,UAAIV,SAAS,GAAG,mCAAhB;AAGA,UAAIe,MAAM,GAAG;AACX,iBAAU,KAAKC,KAAL,CAAWT;AADV,OAAb;AAKA,UAAIL,OAAO,GAAG;AACZ,qBAAc,KAAKc,KAAL,CAAWP;AADb,OAAd;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AAEER,MAAAA,KAAK,CAACS,GAAN,CAAUD,SAAV,EAAqB;AAAEe,QAAAA,MAAF;AAAUb,QAAAA;AAAV,OAArB,EACCC,IADD,CACMC,QAAQ,IAAG;AACf,YAAIa,QAAQ,GAAGb,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmB,CAAnB,CAAf;;AAEA,YAAGY,QAAQ,CAACC,gBAAT,IAA2B,WAA9B,EAA0C;AACxC,eAAKZ,QAAL,CAAc;AACZD,YAAAA,IAAI,EAAE;AACJc,cAAAA,UAAU,EAAE,UADR;AAEJC,cAAAA,GAAG,EAAEH,QAAQ,CAACI,iBAFV;AAGJC,cAAAA,SAAS,EAAEL,QAAQ,CAACM,UAHhB;AAIJC,cAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAJhB;AADM,WAAd;AAQD,SATD,MASM,IAAGR,QAAQ,CAACC,gBAAT,IAA2B,SAA9B,EAAwC;AAC5C,eAAKZ,QAAL,CAAc;AACZD,YAAAA,IAAI,EAAE;AACJc,cAAAA,UAAU,EAAE,SADR;AAEJC,cAAAA,GAAG,EAAEH,QAAQ,CAACI,iBAFV;AAGJC,cAAAA,SAAS,EAAEL,QAAQ,CAACM,UAHhB;AAIJC,cAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAJhB;AADM,WAAd;AAQC,SATG,MASC;AACH,eAAKnB,QAAL,CAAc;AACZD,YAAAA,IAAI,EAAE;AACNc,cAAAA,UAAU,EAAE,QADN;AAENC,cAAAA,GAAG,EAAEH,QAAQ,CAACI,iBAFR;AAGNC,cAAAA,SAAS,EAAEL,QAAQ,CAACM,UAHd;AAINC,cAAAA,SAAS,EAAEP,QAAQ,CAACQ;AAJd;AADM,WAAd;AAQD;;AACHC,QAAAA,UAAU,CAAC,MAAK;AACd,eAAKpB,QAAL,CAAc;AAAEqB,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD,SAFS,EAEP,IAFO,CAAV;AAIAd,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,OArCD,EAsCCN,KAtCD,CAsCOC,KAAK,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAxCD;AA0CA,WAAKgB,iBAAL;AACH,KApIe;;AAAA,SAsIhBA,iBAtIgB,GAsII,MAAM;AAExB,UAAI5B,SAAS,GAAG,iHAAhB;AAGA,UAAIE,OAAO,GAAG;AACZ,qBAAc,KAAKc,KAAL,CAAWP,GADb;AAEZ,kBAAU;AAFE,OAAd;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AAEER,MAAAA,KAAK,CAACS,GAAN,CAAUD,SAAV,EAAqB;AAAEE,QAAAA;AAAF,OAArB,EACCC,IADD,CACMC,QAAQ,IAAG;AACf,YAAIa,QAAQ,GAAGb,QAAQ,CAACC,IAAT,CAAcwB,KAA7B;AACA,aAAKvB,QAAL,CAAc;AACZwB,UAAAA,iBAAiB,EAAEb,QADP;AAEZU,UAAAA,IAAI,EAAG;AAFK,SAAd;AAIA,aAAKrB,QAAL,CAAc;AACZqB,UAAAA,IAAI,EAAG;AADK,SAAd,EANe,CAUhB;;AACCd,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,OAbD,EAcCN,KAdD,CAcOC,KAAK,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAhBD,EAZsB,CA8BtB;AACA;AACA;AACH,KAvKe;;AAGd,SAAKI,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,EADK;AAGX0B,MAAAA,GAAG,EAAE;AACH,iBAAS;AADN,OAHM;AAMXD,MAAAA,iBAAiB,EAAE,EANR;AAOXE,MAAAA,MAAM,EAAE,KAPG;AAQXL,MAAAA,IAAI,EAAE;AARK,KAAb;AAWA,SAAK/B,UAAL;AACA,UAAMqC,SAAS,GAAG,KAAKjB,KAAL,CAAWX,IAA7B;AACA,UAAM6B,KAAK,GAAGpC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CAhBc,CAkBd;;AACA,UAAMoC,MAAM,GAAG5C,WAAW,CAAC6C,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,IAAlC,CAAf,CAnBc,CAoBd;;AACA,UAAMC,KAAK,GAAGL,MAAM,CAACM,YAArB,CArBc,CAuBd;AAEA;;AAEA,aAASC,UAAT,GAAuB;AACrBL,MAAAA,MAAM,CAACM,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6BC,QAAQ,CAACC,KAAtC,EAA6CT,MAAM,CAACC,QAAP,CAAgBS,QAAhB,GACQV,MAAM,CAACC,QAAP,CAAgBU,MADrE;AAEH;;AAEC,QAAIR,KAAK,IAAI,IAAT,IAAiBN,KAAK,IAAI,IAA9B,EAAoC;AAClCR,MAAAA,UAAU,CAAC,MAAK;AACd,aAAKpB,QAAL,CAAc;AAAEqB,UAAAA,IAAI,EAAE;AAAR,SAAd;AACF,OAFU,EAER,GAFQ,CAAV,CADkC,CAInC;AACA,KALD,MAKO,IAAIa,KAAK,IAAI,IAAb,EAAmB;AACxB1C,MAAAA,YAAY,CAACmD,OAAb,CAAqB,UAArB,EAAiCT,KAAjC;AACA,WAAKN,KAAL,GAAapC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;AACA,WAAKH,UAAL,GAHwB,CAIxB;;AACA,UAAI,KAAKsC,KAAL,IAAcpC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAlB,EAAoD;AAClD,aAAKO,QAAL,CAAc;AAAEqB,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAe,QAAAA,UAAU;AACX,OAHD,MAGK;AACHL,QAAAA,MAAM,CAACC,QAAP,CAAgBY,MAAhB;AACD;AAEF;AACF;;AApD6C","sourcesContent":["import React, {Component} from 'react'\r\nimport queryString from 'query-string'\r\nimport axios from 'axios'\r\n\r\nexport default class InfoLogin extends Component{ \r\n\r\nconstructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n      data: {\r\n      },\r\n      exp: {\r\n        'level': 99\r\n      },\r\n      dataStreamersInfo: [],\r\n      isOpen: false,\r\n      load: true\r\n    }\r\n\r\n    this.cargarData();\r\n    const checkData = this.state.data\r\n    const local = localStorage.getItem('logueado')\r\n  \r\n    //console.log(this.props.location.hash)\r\n    const values = queryString.parse(window.location.hash)\r\n    // console.log(values.access_token)\r\n    const login = values.access_token\r\n  \r\n    // console.log(\"Variable local ahora es \" + local )\r\n  \r\n    //const local = localStorage.getItem('logueado')\r\n  \r\n    function removeHash () { \r\n      window.history.pushState(\"\", document.title, window.location.pathname\r\n                                                         + window.location.search);\r\n  }\r\n  \r\n    if (login == null && local == null) {\r\n      setTimeout(()=> {\r\n        this.setState({ load: false})\r\n     }, 500)\r\n     // console.log(\"El usuario no est√° logueado\")\r\n    } else if (login != null) {\r\n      localStorage.setItem('logueado', login)\r\n      this.local = localStorage.getItem('logueado')\r\n      this.cargarData();\r\n      //console.log(\"Usuario logueado con \" + this.local )\r\n      if (this.local == localStorage.getItem('logueado')) {\r\n        this.setState({ load: false})\r\n        removeHash()\r\n      }else{\r\n        window.location.reload();\r\n      }\r\n  \r\n    }\r\n  }\r\n\r\n cargarData = () => {\r\n\r\n    let tokenStr = localStorage.getItem(\"logueado\");\r\n     let webApiUrl = 'https://id.twitch.tv/oauth2/userinfo';\r\n    //console.log(webApiUrl);\r\n     axios.get(webApiUrl, { headers: {\"Authorization\" : `Bearer ${tokenStr}`} })\r\n     .then(response =>{\r\n       var data = response.data;\r\n\r\n       this.setState({user: data.preferred_username})\r\n\r\n       this.setState({aud: data.aud})\r\n\r\n      this.userData();\r\n\r\n   })\r\n   .catch(error =>{\r\n       console.log(error);\r\n   })\r\n };\r\n\r\n  userData = () => {\r\n    \r\n    let webApiUrl = 'https://api.twitch.tv/helix/users';\r\n  \r\n\r\n    var params = {\r\n      'login' : this.state.user\r\n     \r\n    };\r\n    \r\n    var headers = {\r\n      'Client-id' : this.state.aud\r\n    };\r\n    \r\n    console.log(webApiUrl);\r\n  \r\n      axios.get(webApiUrl, { params, headers })\r\n      .then(response =>{\r\n        var dataUser = response.data.data[0];\r\n        \r\n        if(dataUser.broadcaster_type=='affiliate'){\r\n          this.setState({\r\n            data: {\r\n              user_badge: 'Afiliado',\r\n              img: dataUser.profile_image_url,\r\n              user_view: dataUser.view_count,\r\n              user_name: dataUser.display_name\r\n            }\r\n          })\r\n        }else if(dataUser.broadcaster_type=='partner'){\r\n          this.setState({\r\n            data: {\r\n              user_badge: 'Partner',\r\n              img: dataUser.profile_image_url,\r\n              user_view: dataUser.view_count,\r\n              user_name: dataUser.display_name\r\n            }\r\n          })\r\n          }else{\r\n            this.setState({\r\n              data: {\r\n              user_badge: 'Normal',\r\n              img: dataUser.profile_image_url,\r\n              user_view: dataUser.view_count,\r\n              user_name: dataUser.display_name\r\n            }\r\n            })\r\n          }\r\n        setTimeout(()=> {\r\n          this.setState({ load: false})\r\n        }, 1000)\r\n\r\n        console.log(dataUser);\r\n      })\r\n      .catch(error =>{\r\n          console.log(error);\r\n      })\r\n\r\n      this.userDataStreamers()\r\n  };\r\n\r\n  userDataStreamers = () => {\r\n    \r\n    let webApiUrl = 'https://api.twitch.tv/kraken/users?login=coscu,grafo,nanocs1,elcanaldejoaco,pimpeano,qevito,rant4r,tortita,niro';\r\n\r\n    \r\n    var headers = {\r\n      'Client-id' : this.state.aud,\r\n      'Accept': 'application/vnd.twitchtv.v5+json'\r\n    };\r\n    \r\n    console.log(webApiUrl);\r\n  \r\n      axios.get(webApiUrl, { headers })\r\n      .then(response =>{\r\n        var dataUser = response.data.users;\r\n        this.setState({\r\n          dataStreamersInfo :dataUser,\r\n          load : \"false\"\r\n        })\r\n        this.setState({\r\n          load : \"true\"\r\n        })\r\n        \r\n       // console.log(this.state.streamers)\r\n        console.log(dataUser)\r\n      })\r\n      .catch(error =>{\r\n          console.log(error);\r\n      })\r\n\r\n      //console.log(\"Antes de ejecutar!\")\r\n      // console.log(this.state)\r\n      //this.traer()\r\n  };\r\n\r\n}"]},"metadata":{},"sourceType":"module"}